print 1;
print 1>=1;
print 1>1;
print 1==1;

print 1*10;
print 1+10;

var x = 10;
print 1 * x;



fun pow(num, power) {

    var raised = num;
    for (var i=0; i<power; i=i+1) {
        raised = raised * num;
    }
    return raised;
}

print "Powers";
print pow(1,10);
print pow(2,10);

//Test recursive function calls
fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}

//Test closures
fun makeCounter() {
  var i = 0;
  fun count() {
    i = i + 1;
    print i;
  }

  return count;
}

var counter = makeCounter();
counter(); // "1".
counter(); // "2".


fun thrice(fn) {
  for (var i = 1; i <= 3; i = i + 1) {
    fn(i);
  }
}

thrice(fun (a) {
  print a;
});
